import math
import sys

sys.setrecursionlimit(10**9)


def lmap(func, iter):
    return list(map(func, iter))


digits = [['#', '#', '#', '#', '.', '#', '#', '.', '#', '#', '.', '#', '#', '#', '#'], ['.', '#', '.', '#', '#', '.', '.', '#', '.', '.', '#', '.', '#', '#', '#'], ['#', '#', '#', '.', '.', '#', '#', '#', '#', '#', '.', '.', '#', '#', '#'], ['#', '#', '#', '.', '.', '#', '#', '#', '#', '.', '.', '#', '#', '#', '#'], ['#', '.', '#', '#', '.', '#', '#', '#', '#', '.', '.', '#', '.', '.', '#'], [
    '#', '#', '#', '#', '.', '.', '#', '#', '#', '.', '.', '#', '#', '#', '#'], ['#', '#', '#', '#', '.', '.', '#', '#', '#', '#', '.', '#', '#', '#', '#'], ['#', '#', '#', '.', '.', '#', '.', '.', '#', '.', '.', '#', '.', '.', '#'], ['#', '#', '#', '#', '.', '#', '#', '#', '#', '#', '.', '#', '#', '#', '#'], ['#', '#', '#', '#', '.', '#', '#', '#', '#', '.', '.', '#', '#', '#', '#']]


def main():
    n = int(input())
    Ss = [input() for _ in range(5)]

    values = [[] for _ in range(n)]
    for i in range(5):
        for j, sj in enumerate(Ss[i]):
            if j % 4 == 0:
                continue
            values[j//4].append(sj)

    ans = lmap(lambda x: digits.index(x), values)
    print(''.join(map(str, ans)))


if __name__ == '__main__':
    main()
